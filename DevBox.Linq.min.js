/*
[Objeto Exemplo]
var listObject = [
    {
        Id : 0,
        Name : "",
        List : [{ Id : 0 , Name : "" }]
    },
    {
        Id : 1,
        Name : "",
        List : [{ Id : 0 , Name : "" }]
    },
]

[Uso linq]
//console.log(listObject.Where('Id', 0));
//console.log(listObject.Where(x => x.Id >= 0 && x.Id <= 2 && x.List.Any(y => y.Id == 1)));
//console.log(listObject.FirstOrDefault(x => x.Id == 0))
//console.log(listObject.Select(x => g = { d: x.Id, c: x.List }));
//console.log(listObject.All(x => x.Id != 0));
//console.log(listObject.Ordenar());
*/
Array.prototype.Ordenar = function () { return this.sort(function (r, e) { return r - e }) }, Array.prototype.Where = function (r) { if (void 0 == r) return void console.error("Informe a expressão para executar a tarefa."); for (var e = [], o = 0; o < this.length; o++) r(this[o]) && e.push(this[o]); return e }, Array.prototype.Any = function (r) { if (void 0 == r) return void console.error("Informe a expressão para executar a tarefa."); for (var e = 0; e < this.length; e++) if (r(this[e])) return !0; return !1 }, Array.prototype.All = function (r) { if (void 0 == r) return void console.error("Informe a expressão para executar a tarefa."); for (var e = 0; e < this.length; e++) if (!r(this[e])) return !1; return !0 }, Array.prototype.FirstOrDefault = function (r) { if (void 0 == r) return void console.error("Informe a expressão para executar a tarefa."); for (var e = 0; e < this.length; e++) if (r(this[e])) return this[e]; return null }, Array.prototype.Select = function (r) { if (void 0 == r) return void console.error("Informe a expressão para executar a tarefa."); for (var e = [], o = 0; o < this.length; o++) e.push(r(this[o])); return e }, Array.prototype.Remove = function (r) { if (void 0 == r) return void console.error("Informe a expressão para executar a tarefa."); for (var e = 0; e < this.length; e++) r(this[e]) && this.splice(e, 1) }, Array.prototype.Single = function (r, e) { if (void 0 == e) return 0 == this.length ? null : r(this[0]); for (var o = 0; o < this.length; o++) if (e(this[o])) return r(this[o]); return null }, Array.prototype.Skip = function (r) { if (void 0 == r || isNaN(r)) return void console.error("Informe um valor válido."); if (r > this.length) return void console.error("Valor maior que o indice da lista."); for (var e = [], o = r; o < this.length; o++) e.push(this[o]); return e }, Array.prototype.Take = function (r) { if (void 0 == r || isNaN(r)) return void console.error("Informe um valor válido."); for (var e = [], o = 0; r > o; o++) e.push(this[o]); return e };